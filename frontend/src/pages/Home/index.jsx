import api from "../../services/api"; // Importa a inst√¢ncia axios configurada para chamar a API
import { useEffect, useState, useRef } from "react"; // Hooks do React
import "./style.css"; // Estilos da p√°gina

function Home() {
  // Estado para armazenar a lista de usu√°rios obtida da API
  const [users, setUsers] = useState([]);

  // Refer√™ncias para acessar diretamente os inputs do formul√°rio
  const inputName = useRef();
  const inputAge = useRef();
  const inputEmail = useRef();

  // Fun√ß√£o para buscar usu√°rios do backend
  async function getUsers() {
    try {
      // Requisi√ß√£o GET para /usuarios
      const usersFromApi = await api.get("/usuarios");
      console.log("Usu√°rios recebidos:", usersFromApi.data);
      // Atualiza o estado com os usu√°rios recebidos
      setUsers(usersFromApi.data);
    } catch (error) {
      // Tratamento de erro caso a requisi√ß√£o falhe
      console.error("Erro ao buscar usu√°rios:", error);
    }
  }

  // Fun√ß√£o para criar um novo usu√°rio
  async function createUsers() {
    try {
      // Envia dados do formul√°rio via POST para a API
      await api.post("/usuarios", {
        name: inputName.current.value,
        age: inputAge.current.value,
        email: inputEmail.current.value,
      });

      // Limpa os campos do formul√°rio ap√≥s o envio
      inputName.current.value = "";
      inputAge.current.value = "";
      inputEmail.current.value = "";

      // Atualiza a lista de usu√°rios ap√≥s a cria√ß√£o
      getUsers();
    } catch (error) {
      // Tratamento de erro na cria√ß√£o de usu√°rio
      console.error("Erro ao criar usu√°rio:", error);
    }
  }

  // Fun√ß√£o para deletar um usu√°rio pelo id
  async function deleteUsers(id) {
    try {
      // Envia requisi√ß√£o DELETE para a API
      await api.delete(`/usuarios/${id}`);
      // Atualiza a lista ap√≥s exclus√£o
      getUsers();
    } catch (error) {
      // Tratamento de erro na exclus√£o
      console.error("Erro ao deletar usu√°rio:", error);
    }
  }

  // useEffect para executar a busca dos usu√°rios assim que o componente carregar (montar)
  useEffect(() => {
    getUsers();
  }, []);

  return (
    <div className="container">
      <form>
        <h1>Cadastro de Usu√°rios</h1>
        {/* Inputs controlados via ref para capturar dados do formul√°rio */}
        <input placeholder="Nome" name="nome" type="text" ref={inputName} />
        <input placeholder="Idade" name="idade" type="text" ref={inputAge} />
        <input
          placeholder="E-mail"
          name="email"
          type="email"
          ref={inputEmail}
        />
        {/* Bot√£o para cadastrar, que chama a fun√ß√£o createUsers */}
        <button type="button" onClick={createUsers}>
          Cadastrar
        </button>
      </form>
      <div>
        {/* Mapeia a lista de usu√°rios e exibe cards com informa√ß√µes */}
        {users.map((user) => (
          <div key={user.id} className="card">
            <div className="card-info">
              <p>
                Nome: <span>{user.name}</span>
              </p>
              <p>
                Idade: <span>{user.age}</span>
              </p>
              <p>
                E-mail: <span>{user.email}</span>
              </p>
            </div>

            {/* Bot√£o para deletar usu√°rio */}
            <button
              className="trash-button"
              onClick={() => deleteUsers(user.id)}
            >
              <img
                src="https://cdn-icons-png.flaticon.com/512/1214/1214428.png"
                alt="imagem_de_lixeira"
                width="24"
                height="24"
              />
            </button>
          </div>
        ))}
      </div>
      <div className="pop-alert">
        <span>
          ‚ö° Este site pode levar at√© 60 segundos para se conectar ao backend
          devido a sua hospedagem... Por favor, aguarde... üí¨
        </span>
      </div>
    </div>
  );
}

export default Home;
